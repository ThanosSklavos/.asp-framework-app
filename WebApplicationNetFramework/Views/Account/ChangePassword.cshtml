<!-- Views/Account/ChangePassword.cshtml -->
@{
    ViewBag.Title = "Change Password";
}

@model WebApplicationNetFramework.Models.ResetPasswordViewModel

<div class="modal fade" id="changePasswordModal" tabindex="-1" role="dialog" aria-labelledby="changePasswordModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <!-- Your change password modal content here -->
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="changePasswordModalLabel">Change Password</h5>
                <button type="button" onclick="closeMod()" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Add your change password form or content here -->
                <p>This is your first login. Please change your password.</p>
                @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.Id)

                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <!-- Add other form fields for NewPassword and ConfirmPassword -->

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="submit" class="btn btn-primary">Change Password</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jquery") <!-- Make sure jQuery is included in your layout -->

<script>
    $(document).ready(function () {
        // Check if the modal should be shown (based on your server-side logic)
        var shouldShowModal = true;

        if (shouldShowModal) {
            $('#changePasswordModal').modal('show');
        }
    });

    function closeMod() {
        $('#changePasswordModal').modal('hide')
    }
</script>